import Head from 'next/head'
import { getAuth, recaptchaVerifier, signInWithPhoneNumber } from "firebase/auth";

export default function Home() {
  const firebaseConfig = {
  apiKey:process.env.APIKEY,
authDomain:process.env.AUTHDOMAIN ,
projectId: process.env.PROJECTID,
storageBucket: process.env.STORAGEBUCKET,
messagingSenderId: process.env.MESSAGINGSENDERID,
appId:process.env.APPID ,
measurementId: process.env.MEASUREMENTID
  }
	firebase.initializeApp(firebaseConfig);
render();
function render(){
  window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');
  recaptchaVerifier.render();
}
  // function for send message
function phoneAuth(){
  let number = document.getElementById('number').value;
  firebase.auth().signInWithPhoneNumber(number, window.recaptchaVerifier).then((confirmationResult)=>{
      window.confirmationResult = confirmationResult;
      document.getElementById('sender').style.display = 'none';
      document.getElementById('verifier').style.display = 'block';
  }).catch((error)=>{
      alert(error.message);
  });
}
  // function for code verify
function codeverify(){
  let code = document.getElementById('verificationcode').value;
  confirmationResult.confirm(code).then((result)=>{
  console.log(result.user.uid);
      document.getElementsByClassName('p-conf')[0].style.display = 'block';
      document.getElementsByClassName('n-conf')[0].style.display = 'none';
    result.user.getIdToken().then((idToken) => {
               return fetch("/sessionLogin", {
                 method: "POST",
                 headers: {
                   Accept: "application/json",
                   "Content-Type": "application/json",
                  //  "CSRF-Token": Cookies.get("XSRF-TOKEN"),
                 },
                body: JSON.stringify({ idToken })
            });
   })
              const queryString = window.location.search;
              const urlParams = new URLSearchParams(queryString);
              let state = urlParams.get('state');
              let redirect_uri = urlParams.get('redirect_uri');
              console.log(redirect_uri);
              window.location = `${redirect_uri}/?state=${state}&code=${result.user.uid}`;
  })
}
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
       
      </Head>

      <div class="container">
		<div id="sender">
			<input type="text" id="number" placeholder="Enter phone" required/>
			<div id="recaptcha-container"></div>
			<input type="button" id="send" value="Send" />
		</div>
		<div id="verifier" style={{display:"none"}}>
			<input type="text" id="verificationcode" placeholder="OTP Code" required/>
			<input type="button" id="verify" value="Verify"/>
			<div class="p-conf">Number Verified</div>
			<div class="n-conf">OTP ERROR</div>
		</div>
    <style jsx>{`
        	.container {
		position: absolute;
    /* width:50vw; */
		margin-top: 30vh;
    margin-left:23vw;
	}
	#number, #verificationcode {
    width:50vw;
		padding: 10px;
		font-size: 20px;
		margin-bottom: 5px;
		outline: none;
    border:1px solid black;
    border-radius: 5px;
	}
	#recaptcha-container {
    display: flex;
    justify-content: center;
		margin-bottom: 10px;
		margin-top: 10px;
	}
	#send, #verify {
		width:51.5vw;
		height: 40px;
    border: none;
    border-radius: 5px;
    background-color: #1565C0;
    color:white;
    font-size: 16px;
    cursor: pointer;
    margin-top: 10px;
	}
	.p-conf, .n-conf {
		width: calc(100% - 22px);
		border: 2px solid green;
		border-radius: 4px;
		padding: 8px 10px;
		margin: 4px 0px;
		background-color: rgba(0, 249, 12, 0.5);
		display: none;
	}
	.n-conf {
		border-color: red;
		background-color: rgba(255, 0, 4, 0.5);
	}
  @media only screen and (max-width: 600px) {
    .container{
      margin:auto;
      top:30vh;
    }
 #number,#verificationcode{
  width:89vw;
 }
 #send,#verify{
  width:95vw;
 }
`}</style>
	</div>
    </>
  )
}
